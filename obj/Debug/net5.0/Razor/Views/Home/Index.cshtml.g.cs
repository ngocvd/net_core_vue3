#pragma checksum "D:\CS\Vue\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bd3c40774b8f13de459fabd764b0425373cc3465"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\CS\Vue\Views\_ViewImports.cshtml"
using vue;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\CS\Vue\Views\_ViewImports.cshtml"
using vue.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bd3c40774b8f13de459fabd764b0425373cc3465", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e8a6b1b7ff61bf3521b8497f46ed94dbacbacad7", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\CS\Vue\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
<script>
    let myMixin = {
        data() {
            return {
                date: null,
                url: 'http://url',
                options: {},
                myValue: '',
                // define the default value
                value: null,
                // define options
                options1: [{
                    id: 'a',
                    label: 'a',
                    
                    children: [{
                        id: 'aa',
                        label: 'aa',
                    }, {
                        id: 'ab',
                        label: 'ab',
                    }],
                }, {
                    id: 'b',
                    label: 'b',
                }, {
                    id: 'c',
                    label: 'c',
                }],
                datas: {
                    labels: [
                        ""January"",
                        ""February"",
                        ""March"",
               ");
                WriteLiteral(@"         ""April"",
                        ""May"",
                        ""June"",
                        ""July"",
                    ],
                    datasets: [
                        {
                            label: ""Caffine Consumption"",
                            data: [65, 59, 80, 81, 56, 55, 40],
                            fill: false,
                            borderColor: ""#41B883"",
                            backgroundColor: ""black"",
                        },
                        {
                            label: ""Productivity"",
                            data: [70, 25, 110, 90, 5, 60, 30],
                            fill: false,
                            borderColor: ""#00D8FF"",
                            tension: 0.5,
                            backgroundColor: ""blue"",
                        },
                    ],
                }
            }
        },
        methods: {
            myChangeEvent(val) {
                console.log(val);");
                WriteLiteral("\r\n\r\n            },\r\n            mySelectEvent({ id, text }) {\r\n                console.log({ id, text })\r\n            },\r\n            onChange() {\r\n                console.log(this.months)\r\n            }\r\n        }\r\n    };\r\n</script>\r\n");
            }
            );
            WriteLiteral(@"<div class=""text-center"">
    <h1 class=""display-4"">
        Welcome
        <b-icon-facebook />
    </h1>
    <div>
        <treeselect :value-consists-of=""'LEAF_PRIORITY'"" v-model=""value"" :multiple=""true"" :options=""options1"" />
        <select2 v-model=""myValue"" :options=""[{id: '1', text: 'Lựa chọn 1'}, {id: '2', text: 'Lựa chọn 2'}]"" :settings=""{ settingOption: value, settingOption: value, multiple: true }"" v-on:change=""myChangeEvent($event)"" v-on:select=""mySelectEvent($event)"" />
        <h4>Value: {{ myValue }}</h4>
    </div>
        <line-chart :datasets=""datas""></line-chart>
    <line-chart :datasets=""datas""></line-chart>
    <input v-maska=""{ mask: ['!#HHHHHH', '!#HHHHHH-HH'], tokens: { 'H': { pattern: /[0-9a-fA-F]/, uppercase: true }}}"">
</div>
<p>Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>
</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
